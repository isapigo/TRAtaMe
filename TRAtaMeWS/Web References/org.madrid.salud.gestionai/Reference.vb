'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.42000
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.42000.
'
Namespace org.madrid.salud.gestionai
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="ServicioDASoap", [Namespace]:="https://gestionai.salud.madrid.org/")>  _
    Partial Public Class ServicioDA
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private ValidarUsuarioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RecuperarUsuarioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ValidarRecuperarUsuarioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RecuperarUsuarioExtendidoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PerteneceUsuarioAGrupoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerGruposPorUsuarioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ObtenerOUUsuarioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InfoProfesionalUsuarioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CambiarPasswordOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.TRAtaMeWS.My.MySettings.Default.telediagnosticoWS_org_madrid_salud_gestionai_ServicioDA
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event ValidarUsuarioCompleted As ValidarUsuarioCompletedEventHandler
        
        '''<remarks/>
        Public Event RecuperarUsuarioCompleted As RecuperarUsuarioCompletedEventHandler
        
        '''<remarks/>
        Public Event ValidarRecuperarUsuarioCompleted As ValidarRecuperarUsuarioCompletedEventHandler
        
        '''<remarks/>
        Public Event RecuperarUsuarioExtendidoCompleted As RecuperarUsuarioExtendidoCompletedEventHandler
        
        '''<remarks/>
        Public Event PerteneceUsuarioAGrupoCompleted As PerteneceUsuarioAGrupoCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerGruposPorUsuarioCompleted As ObtenerGruposPorUsuarioCompletedEventHandler
        
        '''<remarks/>
        Public Event ObtenerOUUsuarioCompleted As ObtenerOUUsuarioCompletedEventHandler
        
        '''<remarks/>
        Public Event InfoProfesionalUsuarioCompleted As InfoProfesionalUsuarioCompletedEventHandler
        
        '''<remarks/>
        Public Event CambiarPasswordCompleted As CambiarPasswordCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://gestionai.salud.madrid.org/ValidarUsuario", RequestNamespace:="https://gestionai.salud.madrid.org/", ResponseNamespace:="https://gestionai.salud.madrid.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ValidarUsuario(ByVal userLogin As String, ByVal userPassword As String, ByVal login As String, ByVal password As String) As ResultadoLogin
            Dim results() As Object = Me.Invoke("ValidarUsuario", New Object() {userLogin, userPassword, login, password})
            Return CType(results(0),ResultadoLogin)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ValidarUsuarioAsync(ByVal userLogin As String, ByVal userPassword As String, ByVal login As String, ByVal password As String)
            Me.ValidarUsuarioAsync(userLogin, userPassword, login, password, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ValidarUsuarioAsync(ByVal userLogin As String, ByVal userPassword As String, ByVal login As String, ByVal password As String, ByVal userState As Object)
            If (Me.ValidarUsuarioOperationCompleted Is Nothing) Then
                Me.ValidarUsuarioOperationCompleted = AddressOf Me.OnValidarUsuarioOperationCompleted
            End If
            Me.InvokeAsync("ValidarUsuario", New Object() {userLogin, userPassword, login, password}, Me.ValidarUsuarioOperationCompleted, userState)
        End Sub
        
        Private Sub OnValidarUsuarioOperationCompleted(ByVal arg As Object)
            If (Not (Me.ValidarUsuarioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ValidarUsuarioCompleted(Me, New ValidarUsuarioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://gestionai.salud.madrid.org/RecuperarUsuario", RequestNamespace:="https://gestionai.salud.madrid.org/", ResponseNamespace:="https://gestionai.salud.madrid.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RecuperarUsuario(ByVal userLogin As String, ByVal userPassword As String, ByVal login As String) As Usuario
            Dim results() As Object = Me.Invoke("RecuperarUsuario", New Object() {userLogin, userPassword, login})
            Return CType(results(0),Usuario)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RecuperarUsuarioAsync(ByVal userLogin As String, ByVal userPassword As String, ByVal login As String)
            Me.RecuperarUsuarioAsync(userLogin, userPassword, login, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RecuperarUsuarioAsync(ByVal userLogin As String, ByVal userPassword As String, ByVal login As String, ByVal userState As Object)
            If (Me.RecuperarUsuarioOperationCompleted Is Nothing) Then
                Me.RecuperarUsuarioOperationCompleted = AddressOf Me.OnRecuperarUsuarioOperationCompleted
            End If
            Me.InvokeAsync("RecuperarUsuario", New Object() {userLogin, userPassword, login}, Me.RecuperarUsuarioOperationCompleted, userState)
        End Sub
        
        Private Sub OnRecuperarUsuarioOperationCompleted(ByVal arg As Object)
            If (Not (Me.RecuperarUsuarioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RecuperarUsuarioCompleted(Me, New RecuperarUsuarioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://gestionai.salud.madrid.org/ValidarRecuperarUsuario", RequestNamespace:="https://gestionai.salud.madrid.org/", ResponseNamespace:="https://gestionai.salud.madrid.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ValidarRecuperarUsuario(ByVal userLogin As String, ByVal userPassword As String, ByVal login As String, ByVal password As String) As UsuarioExtendido
            Dim results() As Object = Me.Invoke("ValidarRecuperarUsuario", New Object() {userLogin, userPassword, login, password})
            Return CType(results(0),UsuarioExtendido)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ValidarRecuperarUsuarioAsync(ByVal userLogin As String, ByVal userPassword As String, ByVal login As String, ByVal password As String)
            Me.ValidarRecuperarUsuarioAsync(userLogin, userPassword, login, password, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ValidarRecuperarUsuarioAsync(ByVal userLogin As String, ByVal userPassword As String, ByVal login As String, ByVal password As String, ByVal userState As Object)
            If (Me.ValidarRecuperarUsuarioOperationCompleted Is Nothing) Then
                Me.ValidarRecuperarUsuarioOperationCompleted = AddressOf Me.OnValidarRecuperarUsuarioOperationCompleted
            End If
            Me.InvokeAsync("ValidarRecuperarUsuario", New Object() {userLogin, userPassword, login, password}, Me.ValidarRecuperarUsuarioOperationCompleted, userState)
        End Sub
        
        Private Sub OnValidarRecuperarUsuarioOperationCompleted(ByVal arg As Object)
            If (Not (Me.ValidarRecuperarUsuarioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ValidarRecuperarUsuarioCompleted(Me, New ValidarRecuperarUsuarioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://gestionai.salud.madrid.org/RecuperarUsuarioExtendido", RequestNamespace:="https://gestionai.salud.madrid.org/", ResponseNamespace:="https://gestionai.salud.madrid.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RecuperarUsuarioExtendido(ByVal userLogin As String, ByVal userPassword As String, ByVal login As String) As UsuarioExtendido
            Dim results() As Object = Me.Invoke("RecuperarUsuarioExtendido", New Object() {userLogin, userPassword, login})
            Return CType(results(0),UsuarioExtendido)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RecuperarUsuarioExtendidoAsync(ByVal userLogin As String, ByVal userPassword As String, ByVal login As String)
            Me.RecuperarUsuarioExtendidoAsync(userLogin, userPassword, login, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RecuperarUsuarioExtendidoAsync(ByVal userLogin As String, ByVal userPassword As String, ByVal login As String, ByVal userState As Object)
            If (Me.RecuperarUsuarioExtendidoOperationCompleted Is Nothing) Then
                Me.RecuperarUsuarioExtendidoOperationCompleted = AddressOf Me.OnRecuperarUsuarioExtendidoOperationCompleted
            End If
            Me.InvokeAsync("RecuperarUsuarioExtendido", New Object() {userLogin, userPassword, login}, Me.RecuperarUsuarioExtendidoOperationCompleted, userState)
        End Sub
        
        Private Sub OnRecuperarUsuarioExtendidoOperationCompleted(ByVal arg As Object)
            If (Not (Me.RecuperarUsuarioExtendidoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RecuperarUsuarioExtendidoCompleted(Me, New RecuperarUsuarioExtendidoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://gestionai.salud.madrid.org/PerteneceUsuarioAGrupo", RequestNamespace:="https://gestionai.salud.madrid.org/", ResponseNamespace:="https://gestionai.salud.madrid.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PerteneceUsuarioAGrupo(ByVal userLogin As String, ByVal userPassword As String, ByVal login As String, ByVal grupo As String) As Boolean
            Dim results() As Object = Me.Invoke("PerteneceUsuarioAGrupo", New Object() {userLogin, userPassword, login, grupo})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub PerteneceUsuarioAGrupoAsync(ByVal userLogin As String, ByVal userPassword As String, ByVal login As String, ByVal grupo As String)
            Me.PerteneceUsuarioAGrupoAsync(userLogin, userPassword, login, grupo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PerteneceUsuarioAGrupoAsync(ByVal userLogin As String, ByVal userPassword As String, ByVal login As String, ByVal grupo As String, ByVal userState As Object)
            If (Me.PerteneceUsuarioAGrupoOperationCompleted Is Nothing) Then
                Me.PerteneceUsuarioAGrupoOperationCompleted = AddressOf Me.OnPerteneceUsuarioAGrupoOperationCompleted
            End If
            Me.InvokeAsync("PerteneceUsuarioAGrupo", New Object() {userLogin, userPassword, login, grupo}, Me.PerteneceUsuarioAGrupoOperationCompleted, userState)
        End Sub
        
        Private Sub OnPerteneceUsuarioAGrupoOperationCompleted(ByVal arg As Object)
            If (Not (Me.PerteneceUsuarioAGrupoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PerteneceUsuarioAGrupoCompleted(Me, New PerteneceUsuarioAGrupoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://gestionai.salud.madrid.org/ObtenerGruposPorUsuario", RequestNamespace:="https://gestionai.salud.madrid.org/", ResponseNamespace:="https://gestionai.salud.madrid.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerGruposPorUsuario(ByVal userLogin As String, ByVal userPassword As String, ByVal login As String) As String()
            Dim results() As Object = Me.Invoke("ObtenerGruposPorUsuario", New Object() {userLogin, userPassword, login})
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerGruposPorUsuarioAsync(ByVal userLogin As String, ByVal userPassword As String, ByVal login As String)
            Me.ObtenerGruposPorUsuarioAsync(userLogin, userPassword, login, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerGruposPorUsuarioAsync(ByVal userLogin As String, ByVal userPassword As String, ByVal login As String, ByVal userState As Object)
            If (Me.ObtenerGruposPorUsuarioOperationCompleted Is Nothing) Then
                Me.ObtenerGruposPorUsuarioOperationCompleted = AddressOf Me.OnObtenerGruposPorUsuarioOperationCompleted
            End If
            Me.InvokeAsync("ObtenerGruposPorUsuario", New Object() {userLogin, userPassword, login}, Me.ObtenerGruposPorUsuarioOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerGruposPorUsuarioOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerGruposPorUsuarioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerGruposPorUsuarioCompleted(Me, New ObtenerGruposPorUsuarioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://gestionai.salud.madrid.org/ObtenerOUUsuario", RequestNamespace:="https://gestionai.salud.madrid.org/", ResponseNamespace:="https://gestionai.salud.madrid.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ObtenerOUUsuario(ByVal userLogin As String, ByVal userPassword As String, ByVal login As String) As String
            Dim results() As Object = Me.Invoke("ObtenerOUUsuario", New Object() {userLogin, userPassword, login})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ObtenerOUUsuarioAsync(ByVal userLogin As String, ByVal userPassword As String, ByVal login As String)
            Me.ObtenerOUUsuarioAsync(userLogin, userPassword, login, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ObtenerOUUsuarioAsync(ByVal userLogin As String, ByVal userPassword As String, ByVal login As String, ByVal userState As Object)
            If (Me.ObtenerOUUsuarioOperationCompleted Is Nothing) Then
                Me.ObtenerOUUsuarioOperationCompleted = AddressOf Me.OnObtenerOUUsuarioOperationCompleted
            End If
            Me.InvokeAsync("ObtenerOUUsuario", New Object() {userLogin, userPassword, login}, Me.ObtenerOUUsuarioOperationCompleted, userState)
        End Sub
        
        Private Sub OnObtenerOUUsuarioOperationCompleted(ByVal arg As Object)
            If (Not (Me.ObtenerOUUsuarioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ObtenerOUUsuarioCompleted(Me, New ObtenerOUUsuarioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://gestionai.salud.madrid.org/InfoProfesionalUsuario", RequestNamespace:="https://gestionai.salud.madrid.org/", ResponseNamespace:="https://gestionai.salud.madrid.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InfoProfesionalUsuario(ByVal userLogin As String, ByVal userPassword As String, ByVal login As String) As InfoProfesional
            Dim results() As Object = Me.Invoke("InfoProfesionalUsuario", New Object() {userLogin, userPassword, login})
            Return CType(results(0),InfoProfesional)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InfoProfesionalUsuarioAsync(ByVal userLogin As String, ByVal userPassword As String, ByVal login As String)
            Me.InfoProfesionalUsuarioAsync(userLogin, userPassword, login, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InfoProfesionalUsuarioAsync(ByVal userLogin As String, ByVal userPassword As String, ByVal login As String, ByVal userState As Object)
            If (Me.InfoProfesionalUsuarioOperationCompleted Is Nothing) Then
                Me.InfoProfesionalUsuarioOperationCompleted = AddressOf Me.OnInfoProfesionalUsuarioOperationCompleted
            End If
            Me.InvokeAsync("InfoProfesionalUsuario", New Object() {userLogin, userPassword, login}, Me.InfoProfesionalUsuarioOperationCompleted, userState)
        End Sub
        
        Private Sub OnInfoProfesionalUsuarioOperationCompleted(ByVal arg As Object)
            If (Not (Me.InfoProfesionalUsuarioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InfoProfesionalUsuarioCompleted(Me, New InfoProfesionalUsuarioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://gestionai.salud.madrid.org/CambiarPassword", RequestNamespace:="https://gestionai.salud.madrid.org/", ResponseNamespace:="https://gestionai.salud.madrid.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CambiarPassword(ByVal userLogin As String, ByVal userPassword As String, ByVal login As String, ByVal PasswordAntigua As String, ByVal PasswordNueva As String) As ResultadoCambioPassword
            Dim results() As Object = Me.Invoke("CambiarPassword", New Object() {userLogin, userPassword, login, PasswordAntigua, PasswordNueva})
            Return CType(results(0),ResultadoCambioPassword)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CambiarPasswordAsync(ByVal userLogin As String, ByVal userPassword As String, ByVal login As String, ByVal PasswordAntigua As String, ByVal PasswordNueva As String)
            Me.CambiarPasswordAsync(userLogin, userPassword, login, PasswordAntigua, PasswordNueva, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CambiarPasswordAsync(ByVal userLogin As String, ByVal userPassword As String, ByVal login As String, ByVal PasswordAntigua As String, ByVal PasswordNueva As String, ByVal userState As Object)
            If (Me.CambiarPasswordOperationCompleted Is Nothing) Then
                Me.CambiarPasswordOperationCompleted = AddressOf Me.OnCambiarPasswordOperationCompleted
            End If
            Me.InvokeAsync("CambiarPassword", New Object() {userLogin, userPassword, login, PasswordAntigua, PasswordNueva}, Me.CambiarPasswordOperationCompleted, userState)
        End Sub
        
        Private Sub OnCambiarPasswordOperationCompleted(ByVal arg As Object)
            If (Not (Me.CambiarPasswordCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CambiarPasswordCompleted(Me, New CambiarPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="https://gestionai.salud.madrid.org/")>  _
    Public Enum ResultadoLogin
        
        '''<remarks/>
        LOGIN_OK
        
        '''<remarks/>
        LOGIN_NO_EXISTE
        
        '''<remarks/>
        LOGIN_INACTIVO
        
        '''<remarks/>
        LOGIN_BLOQUEADO
        
        '''<remarks/>
        PASSWORD_CADUCADA
        
        '''<remarks/>
        PASSWORD_INCORRECTA
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="https://gestionai.salud.madrid.org/")>  _
    Partial Public Class Usuario
        
        Private nombreField As String
        
        Private apellidosField As String
        
        Private loginField As String
        
        '''<remarks/>
        Public Property nombre() As String
            Get
                Return Me.nombreField
            End Get
            Set
                Me.nombreField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property apellidos() As String
            Get
                Return Me.apellidosField
            End Get
            Set
                Me.apellidosField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property login() As String
            Get
                Return Me.loginField
            End Get
            Set
                Me.loginField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="https://gestionai.salud.madrid.org/")>  _
    Partial Public Class InfoProfesional
        
        Private nombreField As String
        
        Private apellidosField As String
        
        Private loginField As String
        
        Private dniField As String
        
        Private direccion_generalField As String
        
        Private subdireccion_gerenciaField As String
        
        Private ambitoField As String
        
        Private unidad_centroField As String
        
        Private servicioField As String
        
        Private categoriaField As String
        
        Private puestoField As String
        
        Private especialidadField As String
        
        Private empresaField As String
        
        Private eventualField As String
        
        '''<remarks/>
        Public Property nombre() As String
            Get
                Return Me.nombreField
            End Get
            Set
                Me.nombreField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property apellidos() As String
            Get
                Return Me.apellidosField
            End Get
            Set
                Me.apellidosField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property login() As String
            Get
                Return Me.loginField
            End Get
            Set
                Me.loginField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property dni() As String
            Get
                Return Me.dniField
            End Get
            Set
                Me.dniField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property direccion_general() As String
            Get
                Return Me.direccion_generalField
            End Get
            Set
                Me.direccion_generalField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property subdireccion_gerencia() As String
            Get
                Return Me.subdireccion_gerenciaField
            End Get
            Set
                Me.subdireccion_gerenciaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ambito() As String
            Get
                Return Me.ambitoField
            End Get
            Set
                Me.ambitoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property unidad_centro() As String
            Get
                Return Me.unidad_centroField
            End Get
            Set
                Me.unidad_centroField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property servicio() As String
            Get
                Return Me.servicioField
            End Get
            Set
                Me.servicioField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property categoria() As String
            Get
                Return Me.categoriaField
            End Get
            Set
                Me.categoriaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property puesto() As String
            Get
                Return Me.puestoField
            End Get
            Set
                Me.puestoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property especialidad() As String
            Get
                Return Me.especialidadField
            End Get
            Set
                Me.especialidadField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property empresa() As String
            Get
                Return Me.empresaField
            End Get
            Set
                Me.empresaField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property eventual() As String
            Get
                Return Me.eventualField
            End Get
            Set
                Me.eventualField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="https://gestionai.salud.madrid.org/")>  _
    Partial Public Class UsuarioExtendido
        
        Private nombreField As String
        
        Private apellidosField As String
        
        Private loginField As String
        
        Private correoField As String
        
        Private resLoginField As ResultadoLogin
        
        Private ouField As String
        
        Private fechaCaducaPasswordField As Date
        
        Private gruposField() As String
        
        Private tienePreguntasField As System.Nullable(Of Boolean)
        
        '''<remarks/>
        Public Property nombre() As String
            Get
                Return Me.nombreField
            End Get
            Set
                Me.nombreField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property apellidos() As String
            Get
                Return Me.apellidosField
            End Get
            Set
                Me.apellidosField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property login() As String
            Get
                Return Me.loginField
            End Get
            Set
                Me.loginField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property correo() As String
            Get
                Return Me.correoField
            End Get
            Set
                Me.correoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property resLogin() As ResultadoLogin
            Get
                Return Me.resLoginField
            End Get
            Set
                Me.resLoginField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property OU() As String
            Get
                Return Me.ouField
            End Get
            Set
                Me.ouField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property fechaCaducaPassword() As Date
            Get
                Return Me.fechaCaducaPasswordField
            End Get
            Set
                Me.fechaCaducaPasswordField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property grupos() As String()
            Get
                Return Me.gruposField
            End Get
            Set
                Me.gruposField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property tienePreguntas() As System.Nullable(Of Boolean)
            Get
                Return Me.tienePreguntasField
            End Get
            Set
                Me.tienePreguntasField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="https://gestionai.salud.madrid.org/")>  _
    Public Enum ResultadoCambioPassword
        
        '''<remarks/>
        OK
        
        '''<remarks/>
        USUARIO_INEXISTENTE
        
        '''<remarks/>
        PASSWORD_ANTIGUA_INVALIDA
        
        '''<remarks/>
        PASSWORD_NUEVA_INCORRECTA
        
        '''<remarks/>
        [ERROR]
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ValidarUsuarioCompletedEventHandler(ByVal sender As Object, ByVal e As ValidarUsuarioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ValidarUsuarioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ResultadoLogin
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ResultadoLogin)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub RecuperarUsuarioCompletedEventHandler(ByVal sender As Object, ByVal e As RecuperarUsuarioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RecuperarUsuarioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Usuario
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Usuario)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ValidarRecuperarUsuarioCompletedEventHandler(ByVal sender As Object, ByVal e As ValidarRecuperarUsuarioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ValidarRecuperarUsuarioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As UsuarioExtendido
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),UsuarioExtendido)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub RecuperarUsuarioExtendidoCompletedEventHandler(ByVal sender As Object, ByVal e As RecuperarUsuarioExtendidoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RecuperarUsuarioExtendidoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As UsuarioExtendido
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),UsuarioExtendido)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub PerteneceUsuarioAGrupoCompletedEventHandler(ByVal sender As Object, ByVal e As PerteneceUsuarioAGrupoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PerteneceUsuarioAGrupoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ObtenerGruposPorUsuarioCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerGruposPorUsuarioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerGruposPorUsuarioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub ObtenerOUUsuarioCompletedEventHandler(ByVal sender As Object, ByVal e As ObtenerOUUsuarioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ObtenerOUUsuarioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub InfoProfesionalUsuarioCompletedEventHandler(ByVal sender As Object, ByVal e As InfoProfesionalUsuarioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InfoProfesionalUsuarioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As InfoProfesional
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),InfoProfesional)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")>  _
    Public Delegate Sub CambiarPasswordCompletedEventHandler(ByVal sender As Object, ByVal e As CambiarPasswordCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CambiarPasswordCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ResultadoCambioPassword
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ResultadoCambioPassword)
            End Get
        End Property
    End Class
End Namespace
